[global]
time_tracing=true

[[inbounds]]
tag = "data"
type = "unix_socket"
path = "/tmp/data.sock"
protocol = "data_csv"

[[inbounds]]
tag = "control"
type = "unix_socket"
path = "/tmp/control.sock"
protocol = "control_csv"

# [[outbounds]]
# type = "stdio"
# inbounds = ["pipe:timeseries_annotate"]
# disabled = true

[[outbounds]]
type = "parquet"
inbounds = ["pipe:timeseries"]
path = "a.parquet"

[[outbounds]]
type = "prometheus"
inbounds = ["pipe:timeseries"]
address = "env:PROMETHEUS_ADDRESS"
interval = "100ms"
auth = { type = "basic", username = "admin", password = "env:PASSWORD" }
disabled = false

[[pipes]]
type = "timeseries"
inbounds = ["inbound:data"]
# values = ["utilization.gpu", "temperature.gpu", "power.draw", "clocks.gr", "clocks.mem",
#   "clocks_throttle_reasons.hw_slowdown", "clocks_throttle_reasons.hw_thermal_slowdown",
#   "clocks_throttle_reasons.sw_power_cap", "clocks_throttle_reasons.hw_power_brake_slowdown",
#   "clocks_throttle_reasons.gpu_idle", "clocks_throttle_reasons.applications_clocks_setting"]
labels = ["index"]
timestamp = "timestamp"
extra_labels = { job = "void" }

# [[pipes]]
# type = "timeseries_annotate"
# data_inbounds = ["pipe:timeseries"]
# control_inbounds = ["inbound:control"]

[[protocols]]
tag = "data_csv"
type = "csv"
has_header = true
fields = [
  { name = "index", type = "int" },
  { name = "timestamp", type = "datetime" },
  { name = "utilization.gpu", type = "float"},
  { name = "temperature.gpu", type = "float" },
  { name = "power.draw", type = "float" },
  { name = "clocks.gr", type = "float" },
  { name = "clocks.mem", type = "float" },
  { name = "clocks_throttle_reasons.hw_slowdown", type = "bool" },
  { name = "clocks_throttle_reasons.hw_thermal_slowdown", type = "bool" },
  { name = "clocks_throttle_reasons.sw_power_cap", type = "bool" },
  { name = "clocks_throttle_reasons.hw_power_brake_slowdown", type = "bool" },
  { name = "clocks_throttle_reasons.gpu_idle", type = "bool" },
  { name = "clocks_throttle_reasons.applications_clocks_setting", type = "bool" }
]

[[protocols]]
tag = "control_csv"
type = "csv"
has_header = false
fields = [
  { name = "action", type = "string" },
  { name = "name", type = "string" },
  { name = "value", type = "string", optional = true },
]